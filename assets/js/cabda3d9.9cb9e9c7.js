"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[908],{4297:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"sdks/dapp/javascript/clients","title":"Clients","description":"To be able to interact with the 1ClickConnect protocol as a dapp, you need to use a client. All dapp SDKs provide a series of clients to interact with the 1ClickConnect protocol. Here\'s the list of clients provided by the 1ClickConnect SDK:","source":"@site/docs/sdks/dapp/javascript/clients.md","sourceDirName":"sdks/dapp/javascript","slug":"/sdks/dapp/javascript/clients","permalink":"/1-click-connect/docs/sdks/dapp/javascript/clients","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sdks/dapp/javascript/clients.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"dappJavascriptSidebar","previous":{"title":"Installation","permalink":"/1-click-connect/docs/sdks/dapp/javascript/installation"},"next":{"title":"Errors","permalink":"/1-click-connect/docs/sdks/dapp/javascript/errors"}}');var s=i(7968),r=i(7334);const l={sidebar_position:3},c="Clients",d={},a=[{value:"Client",id:"client",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Storage",id:"storage",level:3},{value:"Methods",id:"methods",level:3},{value:"isSignedIn",id:"issignedin",level:4},{value:"signOut",id:"signout",level:4},{value:"requestSignInitialTx",id:"requestsigninitialtx",level:4},{value:"requestSignWithFullAccessKey",id:"requestsignwithfullaccesskey",level:4},{value:"RelayerClient",id:"relayerclient",level:2},{value:"Configuration",id:"configuration-1",level:3},{value:"Storage",id:"storage-1",level:3},{value:"Methods",id:"methods-1",level:3},{value:"isSignedIn",id:"issignedin-1",level:4},{value:"ClientFactory",id:"clientfactory",level:2},{value:"Create new <code>Client</code>",id:"create-new-client",level:3},{value:"Create new <code>RelayerClient</code>",id:"create-new-relayerclient",level:3}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"clients",children:"Clients"})}),"\n",(0,s.jsx)(n.p,{children:"To be able to interact with the 1ClickConnect protocol as a dapp, you need to use a client. All dapp SDKs provide a series of clients to interact with the 1ClickConnect protocol. Here's the list of clients provided by the 1ClickConnect SDK:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#client",children:(0,s.jsx)(n.code,{children:"Client"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#relayerclient",children:(0,s.jsx)(n.code,{children:"RelayerClient"})})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["All clients are initialized via the ",(0,s.jsx)(n.a,{href:"#clientfactory",children:(0,s.jsx)(n.code,{children:"ClientFactory"})}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"client",children:"Client"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Client"})," class describes the dapp's most basic interactions with the 1ClickConnect protocol. It allows the dapp to receive, handle and send messages to the wallet in a simple way."]}),"\n",(0,s.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["Each ",(0,s.jsx)(n.code,{children:"Client"})," instance requires to set the following properties in its configuration:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Required"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"redirectURL"})}),(0,s.jsx)(n.td,{children:"The URL to redirect the user to after the wallet has signed a message (this URL can be override on every method that sends a message to the wallet)"}),(0,s.jsx)(n.td,{children:"\u2705"})]})})]}),"\n",(0,s.jsx)(n.h3,{id:"storage",children:"Storage"}),"\n",(0,s.jsxs)(n.p,{children:["To manage the limited access keys of users connecting to the dapp, the ",(0,s.jsx)(n.code,{children:"Client"})," needs to store the following data for each user:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Required"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"accountID"})}),(0,s.jsx)(n.td,{children:"The account ID of the user"}),(0,s.jsx)(n.td,{children:"\u2705"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"keyPair"})}),(0,s.jsx)(n.td,{children:"A KeyPair in string format of the user's limited access key"}),(0,s.jsx)(n.td,{children:"\u2705"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"signingURL"})}),(0,s.jsx)(n.td,{children:"The URL to redirect the user to sign a payload with their wallet"}),(0,s.jsx)(n.td,{children:"\u2705"})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["Currently, all this data is stored in the browser's ",(0,s.jsx)(n.code,{children:"localStorage"}),". Depending on the needs of dapps integrating the SDK, other storage options may be offered in the future."]}),"\n",(0,s.jsx)(n.h3,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h4,{id:"issignedin",children:"isSignedIn"}),"\n",(0,s.jsxs)(n.p,{children:["To sign in users, the parameters ",(0,s.jsx)(n.code,{children:"accountID"})," and ",(0,s.jsx)(n.code,{children:"signingURL"})," must be received through the URL. This allows calling the client's ",(0,s.jsx)(n.code,{children:"isSignedIn"})," function."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const result = client.isSignedIn(accountID, signingURL);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This call will return a boolean indicating whether the ",(0,s.jsx)(n.code,{children:"accountID"})," already has an associated ",(0,s.jsx)(n.code,{children:"KeyPair"}),". Otherwise, it will return ",(0,s.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["If an entry for the ",(0,s.jsx)(n.code,{children:"accountID"})," exists but has a different ",(0,s.jsx)(n.code,{children:"signingURL"}),", this field will be updated with the one provided as a parameter."]})}),"\n",(0,s.jsx)(n.h4,{id:"signout",children:"signOut"}),"\n",(0,s.jsxs)(n.p,{children:["To sign out a user, you can use the ",(0,s.jsx)(n.code,{children:"signOut"})," method. This action does not remove the user's account from the storage, but it will clear the active account state."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"client.signOut();\n"})}),"\n",(0,s.jsx)(n.h4,{id:"requestsigninitialtx",children:"requestSignInitialTx"}),"\n",(0,s.jsx)(n.p,{children:"For a user to start making transactions in the dapp, they must first sign an initial transaction. This initial transaction will generate a limited access key for the user with the permissions required by the dapp and send the transaction to the wallet to be signed."}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"requestSignInitialTx"})," method will generate a URL that redirects the user to the wallet's signingURL with the necessary information to sign the initial transaction."]}),"\n",(0,s.jsx)(n.p,{children:"The method requires an argument of type:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { FunctionCallPermission } from "near-api-js/lib/transaction";\n\ntype SignInitialTxRequest = {\n    accountID: string;\n    signingURL: string;\n    permissions: FunctionCallPermission;\n};\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const request: SignInitialTxRequest = {\n    accountID: accountID,\n    signingURL: signingURL,\n    permissions: permissions,\n};\n\nconst url = client.requestSignInitialTx(request);\n"})}),"\n",(0,s.jsx)(n.p,{children:"Once the URL has been generated, the dapp should redirect the user to the wallet."}),"\n",(0,s.jsx)(n.h4,{id:"requestsignwithfullaccesskey",children:"requestSignWithFullAccessKey"}),"\n",(0,s.jsx)(n.p,{children:"When the dapp needs to sign a transaction that cannot be signed with the client's limited access key, this method can be called to generate a URL that will redirect the user to the wallet's signingURL with the required information."}),"\n",(0,s.jsx)(n.p,{children:"The method requires an argument of type:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"type SignWithFakRequest = {\n    transaction: Transaction;\n    signingURL: string;\n};\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const request: SignWithFakRequest = {\n    transaction: transaction,\n    signingURL: signingURL,\n};\n\nconst url = client.requestSignWithFullAccessKey(request);\n"})}),"\n",(0,s.jsx)(n.p,{children:"Once the URL has been generated, the dapp should redirect the user to the wallet."}),"\n",(0,s.jsx)(n.h2,{id:"relayerclient",children:"RelayerClient"}),"\n",(0,s.jsx)(n.h3,{id:"configuration-1",children:"Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["Each ",(0,s.jsx)(n.code,{children:"RelayerClient"})," instance requires to set the following properties in its configuration:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Required"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"redirectURL"})}),(0,s.jsx)(n.td,{children:"The URL to redirect the user to after the wallet has signed a message (this URL can be override on every method that sends a message to the wallet)"}),(0,s.jsx)(n.td,{children:"\u2705"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"relayerAPI"})}),(0,s.jsx)(n.td,{children:"Information of the relayer API that will be used to relay transactions"}),(0,s.jsx)(n.td,{children:"\u274c"})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"relayerAPI"})," field is not required when initializing the ",(0,s.jsx)(n.code,{children:"RelayerClient"}),". If not specified, the ",(0,s.jsx)(n.code,{children:"RelayerClient"})," will attempt to obtain the relayer API from the sign-in message. If not found there, it will use the default relayer API. If found in the sign-in message, the ",(0,s.jsx)(n.code,{children:"RelayerClient"})," will add it to its configuration."]}),"\n",(0,s.jsx)(n.h3,{id:"storage-1",children:"Storage"}),"\n",(0,s.jsxs)(n.p,{children:["As previously mentioned in the ",(0,s.jsx)(n.a,{href:"#storage",children:"Storage"})," section of the ",(0,s.jsx)(n.code,{children:"Client"}),", the ",(0,s.jsx)(n.code,{children:"RelayerClient"})," stores user account information in the browser's ",(0,s.jsx)(n.code,{children:"localStorage"})," by default. The following data is stored:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Required"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"accountID"})}),(0,s.jsx)(n.td,{children:"The account ID of the user"}),(0,s.jsx)(n.td,{children:"\u2705"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"keyPair"})}),(0,s.jsx)(n.td,{children:"A KeyPair in string format of the user's limited access key"}),(0,s.jsx)(n.td,{children:"\u2705"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"signingURL"})}),(0,s.jsx)(n.td,{children:"The URL to redirect the user to sign a payload with their wallet"}),(0,s.jsx)(n.td,{children:"\u2705"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"relayerAPI"})}),(0,s.jsx)(n.td,{children:"Information of the relayer API that will be used to relay transactions"}),(0,s.jsx)(n.td,{children:"\u2705"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"methods-1",children:"Methods"}),"\n",(0,s.jsxs)(n.p,{children:["El ",(0,s.jsx)(n.code,{children:"RelayerClient"})," extiende todos los m\xe9todos expuestos por el ",(0,s.jsx)(n.code,{children:"Client"})," a excepci\xf3n de ",(0,s.jsx)(n.code,{children:"isSignedIn"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"issignedin-1",children:"isSignedIn"}),"\n",(0,s.jsxs)(n.p,{children:["A diferencia de el ",(0,s.jsx)(n.code,{children:"isSignedIn"})," del ",(0,s.jsx)(n.code,{children:"Client"}),", el ",(0,s.jsx)(n.code,{children:"isSignedIn"})," del ",(0,s.jsx)(n.code,{children:"RelayerClient"})," requiere del par\xe1metro adicional ",(0,s.jsx)(n.code,{children:"relayerAPI"}),". Este par\xe1metro debe ser proporcionado por el wallet cuando el usuario quiera enviar sus transacciones mediante un relayer."]}),"\n",(0,s.jsxs)(n.p,{children:["Al igual que el ",(0,s.jsx)(n.code,{children:"isSignedIn"})," del ",(0,s.jsx)(n.code,{children:"Client"}),", este m\xe9todo retornar\xe1 ",(0,s.jsx)(n.code,{children:"true"})," si el usuario ya est\xe1 autenticado, o ",(0,s.jsx)(n.code,{children:"false"})," en caso contrario. Al igual que con el campo de ",(0,s.jsx)(n.code,{children:"signingURL"}),", si el campo de ",(0,s.jsx)(n.code,{children:"relayerAPI"})," no coincide con el almacenado, se actualizar\xe1 con el valor proporcionado."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const result = client.isSignedIn(accountID, signingURL, relayerAPI);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"clientfactory",children:"ClientFactory"}),"\n",(0,s.jsx)(n.p,{children:"This factory helps users instantiate a client easily according to the type of client they need. It exposes one method for each type of client that can be instantiated."}),"\n",(0,s.jsxs)(n.h3,{id:"create-new-client",children:["Create new ",(0,s.jsx)(n.a,{href:"#client",children:(0,s.jsx)(n.code,{children:"Client"})})]}),"\n",(0,s.jsxs)(n.p,{children:["To create a new ",(0,s.jsx)(n.a,{href:"#client",children:(0,s.jsx)(n.code,{children:"Client"})}),", you can use the following method:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { ClientFactory } from "@one-click-connect/browser-dapp";\n\nconst client = ClientFactory.newClient({\n    redirectURL: "https://example.com/redirect",\n});\n'})}),"\n",(0,s.jsxs)(n.p,{children:["You only need to pass the configuration of type ",(0,s.jsx)(n.code,{children:"ClientConfig"})," as an argument. This method will return a ",(0,s.jsx)(n.a,{href:"#client",children:(0,s.jsx)(n.code,{children:"Client"})})," that have access to the storage and ready to be used."]}),"\n",(0,s.jsxs)(n.h3,{id:"create-new-relayerclient",children:["Create new ",(0,s.jsx)(n.a,{href:"#relayerclient",children:(0,s.jsx)(n.code,{children:"RelayerClient"})})]}),"\n",(0,s.jsxs)(n.p,{children:["To create a new ",(0,s.jsx)(n.a,{href:"#relayerclient",children:(0,s.jsx)(n.code,{children:"RelayerClient"})}),", you can use the following method:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { ClientFactory } from "@one-click-connect/browser-dapp";\n\nconst relayerClient = ClientFactory.newRelayerClient({\n    redirectURL: "https://example.com/redirect",\n});\n'})}),"\n",(0,s.jsxs)(n.p,{children:["You only need to pass the configuration of type ",(0,s.jsx)(n.code,{children:"RelayerClientConfig"})," as an argument. This method will return a ",(0,s.jsx)(n.a,{href:"#relayerclient",children:(0,s.jsx)(n.code,{children:"RelayerClient"})})," that have access to the storage and ready to be used."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},7334:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>c});var t=i(4700);const s={},r=t.createContext(s);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);