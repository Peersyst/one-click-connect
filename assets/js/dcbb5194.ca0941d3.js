"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[481],{5222:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"guides/integrate_dapp","title":"Integrate the DApp SDK","description":"This guide will walk you through the process of integrating the 1ClickConnect DApp SDK into your own dapp project. Follow the steps below to get started.","source":"@site/docs/guides/integrate_dapp.md","sourceDirName":"guides","slug":"/guides/integrate_dapp","permalink":"/1-click-connect/docs/guides/integrate_dapp","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/guides/integrate_dapp.md","tags":[],"version":"current","frontMatter":{},"sidebar":"guidesSidebar","previous":{"title":"Overview","permalink":"/1-click-connect/docs/guides/intro"},"next":{"title":"Integrate the Wallet SDK","permalink":"/1-click-connect/docs/guides/integrate_wallet"}}');var s=t(7968),l=t(7334);const c={},r="Integrate the DApp SDK",a={},o=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Instantiating a client",id:"instantiating-a-client",level:2},{value:"Client",id:"client",level:3},{value:"RelayerClient",id:"relayerclient",level:3},{value:"Handle sign in",id:"handle-sign-in",level:2},{value:"Request a full access key signature",id:"request-a-full-access-key-signature",level:2},{value:"Handle sign out",id:"handle-sign-out",level:2},{value:"Get the active account",id:"get-the-active-account",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"integrate-the-dapp-sdk",children:"Integrate the DApp SDK"})}),"\n",(0,s.jsx)(n.p,{children:"This guide will walk you through the process of integrating the 1ClickConnect DApp SDK into your own dapp project. Follow the steps below to get started."}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(n.p,{children:"To be able to integrate the DApp SDK, you will need to have installed a 1ClickConnect DApp SDK. You can install one of the following SDKs:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/1-click-connect/docs/sdks/dapp/javascript/installation",children:"Javascript"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"instantiating-a-client",children:"Instantiating a client"}),"\n",(0,s.jsx)(n.p,{children:"The current version of the DApp SDK contains two clients:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"Client"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"RelayerClient"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Both clients contain the same methods. The main difference between the two is that the RelayerClient must be used when a user provides the relayerAPI parameter. You can find more information about both clients in the ",(0,s.jsx)(n.a,{href:"/1-click-connect/docs/sdks/dapp/javascript/clients",children:"SDK"})," section."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["All clients must be instantiated via ",(0,s.jsx)(n.code,{children:"ClientFactory"}),"."]})}),"\n",(0,s.jsx)(n.h3,{id:"client",children:"Client"}),"\n",(0,s.jsx)(n.p,{children:"To create a new Client instance, you must provide a ClientConfig object with the following properties:"}),"\n",(0,s.jsx)(n.p,{children:"redirectURL: The URL of the page that will be redirected to after the user has connected their wallet.\nYour code should look like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'const client = ClientFactory.newClient({\n    redirectURL: "<YOUR_REDIRECT_URL>",\n});\n'})}),"\n",(0,s.jsx)(n.h3,{id:"relayerclient",children:"RelayerClient"}),"\n",(0,s.jsx)(n.p,{children:"RelayerClient\nTo create a new RelayerClient instance, you must provide a RelayerClientConfig object the following properties:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"redirectURL"}),": The URL of the page that will be redirected to after the user has connected their wallet."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"relayerAPI"})," (optional): Information of the relayer API."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Your code should look like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'const relayerClient = ClientFactory.newRelayerClient({\n    redirectURL: "<YOUR_REDIRECT_URL>",\n    relayerAPI: {\n        url: "<YOUR_RELAYER_API_URL>",\n    }, // Optional\n});\n'})}),"\n",(0,s.jsx)(n.h2,{id:"handle-sign-in",children:"Handle sign in"}),"\n",(0,s.jsx)(n.p,{children:"Now that you have an instance of the client, you can start handling the sign in process."}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"In order to be able to receive sign in requests from a wallet, you must set an URL in your dapp that will be used by the wallet to send the requests."})}),"\n",(0,s.jsx)(n.p,{children:"To handle the sign in process, you can use the following code:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'// Previously, you had instantiated the client like this:\nconst client = ClientFactory.newClient({\n    redirectURL: "<YOUR_REDIRECT_URL>",\n});\n\n// Now, you can handle the sign in process like this:\nconst isSignedIn = await client.isSignedIn();\n\nif (isSignedIn) {\n    return;\n}\n\n// Generate a sign in request\nconst requestURL = await client.requestSignIn({\n    accountID: "<ACCOUNT_ID_PROVIDED_BY_QUERY_PARAMS>",\n    signingURL: "<SIGNING_URL_PROVIDED_BY_QUERY_PARAMS>",\n    permissions: <YOUR_FUNCTION_CALL_PERMISSIONS>,\n});\n\n// Redirect the user to the signing URL\n'})}),"\n",(0,s.jsx)(n.h2,{id:"request-a-full-access-key-signature",children:"Request a full access key signature"}),"\n",(0,s.jsx)(n.p,{children:"At some point, you may need to request a full access key signature from the wallet since you don't have enough permissions to perform the action you want."}),"\n",(0,s.jsx)(n.p,{children:"To request a full access key signature, you can use the following code:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'const requestURL = await client.requestSignWithFullAccessKey({\n    signingURL: "<SIGNING_URL>",\n    transaction: <DESIRED_TRANSACTION>,\n});\n\n// Redirect the user to the signing URL\n'})}),"\n",(0,s.jsx)(n.h2,{id:"handle-sign-out",children:"Handle sign out"}),"\n",(0,s.jsx)(n.p,{children:"To handle the sign out process, you can use the following code:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"client.signOut();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"get-the-active-account",children:"Get the active account"}),"\n",(0,s.jsx)(n.p,{children:"To get the active account, you can use the following code:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const account = client.getActiveAccount();\n"})}),"\n",(0,s.jsx)(n.p,{children:"It will return an Account object if the user is signed in, containing the account ID, its keypair and more information."})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},7334:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var i=t(4700);const s={},l=i.createContext(s);function c(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);